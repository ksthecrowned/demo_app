 workflows:
  ios-workflow:
    name: iOS Workflow
    integrations:
      app_store_connect: Ride Connect API
    environment:
      ios_signing:
        provisioning_profiles:
          - "Demo App Prof"
        certificates:
          - "Demo App cert"
      flutter: stable
      xcode: latest
      cocoapods: default
      vars:
        XCODE_WORKSPACE: "ios/Runner.xcworkspace"
        XCODE_SCHEME: "Runner"
        BUNDLE_ID: "com.lrcgroup.demoApp"
        APPLE_TEAM_ID: "8XRRMA7H34"
        PRODUCT_NAME: "Demo App"
        VERSION_NUMBER: "1.0.0"
        BUILD_NUMBER: "1"
        GOOGLE_MAPS_IOS_KEY: "AIzaSyD2ZjTocIDxAPDP2Qtfwl3d_hz_vwDmuyM"
    triggering:
      events:
        - push
        - pull_request
      branch_patterns:
        - pattern: tmp-branch
          include: true
    scripts:
      - name: Create Flutter project & install dependencies
        script: |
          set -e

          echo "üöÄ Cr√©ation du projet iOS Flutter..."
          # flutter create .

          echo "üßπ Nettoyage du projet Flutter..."
          flutter clean
          flutter pub get

      - name: Update version
        script: |
          cd ios
          agvtool new-version -all $BUILD_NUMBER
          cd ..
          
          # Update Flutter version in pubspec.yaml
          sed -i '' "s/version: .*/version: $VERSION_NUMBER+$BUILD_NUMBER/" pubspec.yaml

      - name: Force iOS 15.0 and install pods
        script: |
          cd ios
      
          # Ajout dans le Podfile
          if ! grep -q "platform :ios, '15.0'" Podfile; then
            sed -i '' "1s/^/platform :ios, '15.0'\n/" Podfile
          fi
      
          # Fix Xcode project
          sed -i '' 's/IPHONEOS_DEPLOYMENT_TARGET = 12.0;/IPHONEOS_DEPLOYMENT_TARGET = 15.0;/g' Runner.xcodeproj/project.pbxproj
      
          # Fix AppFrameworkInfo.plist
          plutil -replace MinimumOSVersion -string "15.0" Flutter/AppFrameworkInfo.plist || true
      
          pod deintegrate
          pod install
          cd ..

      - name: Set up code signing settings
        script: |
          # echo "üîê Setting up code signing..."
          cd ios
          xcode-project use-profiles

          # echo "Creating ExportOptions.plist..."
          cat > ExportOptions.plist << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>provisioningProfiles</key>
              <dict>
                  <key>com.lrcgroup.demoApp</key>
                  <string>Demo App Prof</string>
              </dict>
              <key>signingStyle</key>
              <string>manual</string>
              <key>teamID</key>
              <string>8XRRMA7H34</string>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>uploadSymbols</key>
              <true/>
          </dict>
          </plist>
          EOF

          cd ..

      - name: Update Info.plist and AppDelegate.swift
        script: |
          cd ios
          # Update basic app info
          plutil -replace CFBundleDisplayName -string "$PRODUCT_NAME" Runner/Info.plist
          plutil -replace CFBundleShortVersionString -string "$VERSION_NUMBER" Runner/Info.plist
          plutil -replace CFBundleVersion -string "$BUILD_NUMBER" Runner/Info.plist
          
          # Add privacy usage descriptions
          plutil -replace NSPhotoLibraryUsageDescription -string "Ride a besoin d'acc√©der √† votre galerie photo pour vous permettre de t√©l√©charger votre photo de profil et des photos pour vos annonces." Runner/Info.plist
          plutil -replace NSCameraUsageDescription -string "Ride a besoin d'acc√©der √† votre appareil photo pour vous permettre de prendre des photos pour votre profil et vos annonces." Runner/Info.plist
          plutil -replace NSLocationWhenInUseUsageDescription -string "Ride a besoin d'acc√©der √† votre localisation pour vous montrer les annonces proches de vous et calculer les distances de trajet." Runner/Info.plist
          plutil -replace NSLocationAlwaysAndWhenInUseUsageDescription -string "Ride a besoin d'acc√©der √† votre localisation pour vous montrer les annonces proches de vous et calculer les distances de trajet, m√™me lorsque l'application est en arri√®re-plan." Runner/Info.plist

          # Add Google Maps configuration (for compatibility with some plugins)
          plutil -replace io.flutter.embedded_views_preview -bool true Runner/Info.plist
          plutil -replace GMSApiKey -string "$GOOGLE_MAPS_IOS_KEY" Runner/Info.plist

          echo "üõ†Ô∏è Mise √† jour de AppDelegate.swift..."

          IOS_APP_DELEGATE="Runner/AppDelegate.swift"
          
          # üîç V√©rifie si GMSServices.provideAPIKey est d√©j√† pr√©sent
          if ! grep -q "GMSServices.provideAPIKey" "$IOS_APP_DELEGATE"; then
            echo "üîß Configuration de Google Maps dans AppDelegate.swift"
          
            # Sauvegarde du fichier existant
            cp "$IOS_APP_DELEGATE" "$IOS_APP_DELEGATE.bak"
          
            # R√©√©crit compl√®tement le fichier AppDelegate.swift avec le bon contenu
            cat > "$IOS_APP_DELEGATE" <<EOF
          import UIKit
          import Flutter
          import GoogleMaps
          
          @UIApplicationMain
          @objc class AppDelegate: FlutterAppDelegate {
            override func application(
              _ application: UIApplication,
              didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?
            ) -> Bool {
              GMSServices.provideAPIKey("$GOOGLE_MAPS_API_KEY")
              GeneratedPluginRegistrant.register(with: self)
              return super.application(application, didFinishLaunchingWithOptions: launchOptions)
            }
          }
          EOF
          
            echo "‚úÖ AppDelegate.swift mis √† jour avec la configuration Google Maps"
          else
            echo "‚úÖ Google Maps d√©j√† configur√© dans AppDelegate.swift"
          fi

          ENTITLEMENTS_PATH="Runner/Runner.entitlements"
          
          # Cr√©e Runner.entitlements s'il n'existe pas
          if [ ! -f "$ENTITLEMENTS_PATH" ]; then
            echo "üìÅ Fichier Runner.entitlements manquant, cr√©ation en cours..."
            cat > "$ENTITLEMENTS_PATH" <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>aps-environment</key>
            <string>production</string>
          </dict>
          </plist>
          EOF
          else
            echo "‚úÖ Runner.entitlements trouv√©"
          
            # Ajoute aps-environment si absent
            if ! grep -q "aps-environment" "$ENTITLEMENTS_PATH"; then
              echo "üîß Ajout de aps-environment √† Runner.entitlements"
              sed -i '' '/<dict>/a\
            <key>aps-environment</key>\
            <string>development</string>' "$ENTITLEMENTS_PATH"
            else
              echo "‚úÖ aps-environment d√©j√† pr√©sent"
            fi
          fi
          
          APP_DELEGATE_FILE="Runner/AppDelegate.swift"

          # V√©rifie si la m√©thode apnsToken est d√©j√† pr√©sente
          if ! grep -q "Messaging.messaging().apnsToken" "$APP_DELEGATE_FILE"; then
            echo "üîß Ajout du support Firebase Messaging dans AppDelegate.swift"
          
            # Ajoute les imports si absents
            if ! grep -q "import FirebaseMessaging" "$APP_DELEGATE_FILE"; then
              echo "üß© Ajout des imports Firebase..."
              sed -i '' '1s/^/import FirebaseMessaging\n/' "$APP_DELEGATE_FILE"
              sed -i '' '1s/^/import Firebase\n/' "$APP_DELEGATE_FILE"
            fi
          
            # Ajoute la m√©thode didRegisterForRemoteNotificationsWithDeviceToken dans la classe AppDelegate
            echo "üß© Ajout de la m√©thode didRegisterForRemoteNotificationsWithDeviceToken..."
          
            # Ins√®re la m√©thode juste avant la derni√®re accolade fermante de la classe
            sed -i '' '/^}/i\
          \
            override func application(_ application: UIApplication,\
                            didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\
              Messaging.messaging().apnsToken = deviceToken\
            }\
          ' "$APP_DELEGATE_FILE"
          
            echo "‚úÖ M√©thode ajout√©e dans AppDelegate.swift"
          else
            echo "‚úÖ M√©thode apnsToken d√©j√† pr√©sente dans AppDelegate.swift"
          fi



          cd ..

      - name: Build IPA
        script: |
          echo "üì¶ Building IPA with code signing..."
          flutter build ipa \
            --release \
            --export-options-plist=ios/ExportOptions.plist
      # - name: Build iOS for simulator
      #   script: |
      #     flutter build ios --simulator
      # - name: Zip the .app for simulator
      #   script: |
      #     mkdir -p build/ios/ride
      #     cp -r build/ios/iphonesimulator/*.app build/ios/ride/
      #     cd build/ios/
      #     zip -r ride.zip ride

    artifacts:
      - build/ios/ipa/*.ipa
      # - build/ios/ride.zip

    publishing:
      email:
        recipients:
          - lrcgroup@gmail.com
          - kaiserstyve2@gmail.com
      app_store_connect:
        auth: integration 
        submit_to_testflight: true
        expire_build_submitted_for_review: true
        submit_to_app_store: false
        beta_groups:
         - "Internal Testers"